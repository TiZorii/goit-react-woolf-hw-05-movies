{"version":3,"file":"static/js/13.6897d693.chunk.js","mappings":"oNAEO,MAAMA,EAAOC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kEAKhBC,EAAWJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wEAIpBI,EAAOP,EAAAA,GAAOQ,EAACC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mDAIfO,EAAMV,EAAAA,GAAOW,IAAGC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,gC,aCV7B,MAAMU,EACJ,wEAEa,SAASC,IACtB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IACjC,IAAIC,GAASC,EAAAA,EAAAA,KAcb,OAZAC,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAM,KAAEN,SAAeO,EAAAA,EAAAA,IAAeJ,EAAOK,SAC7CP,EAAQD,EACV,CAAE,MAAOS,GACPC,QAAQC,IAAIF,EACd,CACF,CAEAG,CAAaT,EAAOK,QAAQ,GAC3B,CAACL,EAAOK,WAETK,EAAAA,EAAAA,KAAC7B,EAAI,CAAA8B,SACFd,EAAKe,KAAIC,IAA0D,IAAzD,cAAEC,EAAa,UAAEC,EAAS,aAAEC,EAAY,QAAEC,GAASJ,EAC5D,OACEK,EAAAA,EAAAA,MAAChC,EAAQ,CAAAyB,SAAA,EACPD,EAAAA,EAAAA,KAAClB,EAAG,CACF2B,IACmB,OAAjBH,EAAqB,GAAAI,OACdzB,GAAQ,mCAAAyB,OACwBJ,GAEzCK,IAAKP,EACLQ,MAAM,SAERZ,EAAAA,EAAAA,KAACrB,EAAI,CAAAsB,SAAEG,KACPJ,EAAAA,EAAAA,KAAA,KAAAC,SAAII,MAXSE,EAYJ,KAKrB,C,mFC3CAM,EAAAA,EAAMC,SAASC,QAAU,gCACzB,MAAMC,EAAU,mCAETvB,eAAewB,EAAYC,GAIhC,aAHuBL,EAAAA,EAAMM,IAAI,8BAADT,OACAM,EAAO,yBAAAN,OAAwBQ,KAE/CE,IAClB,CAEO3B,eAAe4B,EAAe1B,GAInC,aAHuBkB,EAAAA,EAAMM,IAAI,SAADT,OACrBf,EAAO,aAAAe,OAAYM,EAAO,qBAErBI,IAClB,CACO3B,eAAeC,EAAeC,GAInC,aAHuBkB,EAAAA,EAAMM,IAAI,SAADT,OACrBf,EAAO,qBAAAe,OAAoBM,EAAO,qBAE7BI,IAClB,CACO3B,eAAe6B,EAAkB3B,GAItC,aAHuBkB,EAAAA,EAAMM,IAAI,SAADT,OACrBf,EAAO,qBAAAe,OAAoBM,EAAO,qBAE7BI,IAClB,CACO3B,eAAe8B,EAAmBC,EAAON,GAI9C,aAHuBL,EAAAA,EAAMM,IAAI,sBAADT,OACRc,EAAK,aAAAd,OAAYM,EAAO,yBAAAN,OAAwBQ,KAExDE,IAClB,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -15px;\n`;\nexport const ListItem = styled.li`\n  margin: 15px;\n  flex-basis: calc((100% - 10 * 15px) / 5);\n`;\nexport const Name = styled.p`\n  font-weight: 700;\n  margin-top: 5px;\n`;\nexport const Img = styled.img`\n  min-height: 192px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport { List, ListItem, Name, Img } from './Cast.styled';\n\nconst NO_IMAGE =\n  'https://banffventureforum.com/wp-content/uploads/2019/08/No-Image.png';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  let params = useParams();\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const { cast } = await fetchMovieCast(params.movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getMovieCast(params.movieId);\n  }, [params.movieId]);\n  return (\n    <List>\n      {cast.map(({ original_name, character, profile_path, cast_id }) => {\n        return (\n          <ListItem key={cast_id}>\n            <Img\n              src={\n                profile_path === null\n                  ? `${NO_IMAGE}`\n                  : `https://image.tmdb.org/t/p/w300/${profile_path}`\n              }\n              alt={original_name}\n              width=\"150\"\n            />\n            <Name>{original_name}</Name>\n            <p>{character}</p>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '553cfa22e40cda1b81fd4b29995b0acb';\n\nexport async function fetchMovies(page) {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\nexport async function fetchMoviesByQuery(query, page) {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","ListItem","li","_templateObject2","Name","p","_templateObject3","Img","img","_templateObject4","NO_IMAGE","Cast","cast","setCast","useState","params","useParams","useEffect","async","fetchMovieCast","movieId","error","console","log","getMovieCast","_jsx","children","map","_ref","original_name","character","profile_path","cast_id","_jsxs","src","concat","alt","width","axios","defaults","baseURL","API_KEY","fetchMovies","page","get","data","fetchMovieById","fetchMovieReviews","fetchMoviesByQuery","query"],"sourceRoot":""}